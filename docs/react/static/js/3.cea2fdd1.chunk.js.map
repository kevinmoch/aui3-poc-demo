{"version":3,"sources":["../node_modules/css-vars-ponyfill/dist/css-vars-ponyfill.esm.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_toConsumableArray","arr","Array","isArray","arr2","_arrayWithoutHoles","iter","Symbol","iterator","toString","from","_iterableToArray","TypeError","_nonIterableSpread","getUrls","urls","options","undefined","settings","mimeType","onBeforeSend","Function","onSuccess","onError","onComplete","urlArray","urlQueue","map","x","isValidCss","trim","charAt","xhr","urlIndex","responseText","returnVal","indexOf","parser","document","createElement","forEach","url","setAttribute","href","String","Boolean","all","window","atob","host","split","location","protocol","xdr","XDomainRequest","open","timeout","onprogress","ontimeout","onload","onerror","err","setTimeout","send","console","warn","concat","XMLHttpRequest","overrideMimeType","onreadystatechange","readyState","status","getCssData","regex","cssComments","cssImports","rootElement","include","exclude","filter","useCSSOM","sourceNodes","querySelectorAll","node","elm","selector","matches","matchesSelector","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","cssArray","handleComplete","cssText","join","handleSuccess","cssIndex","sourceUrl","resolveImports","baseUrl","callbackFn","__errorData","__errorRules","importData","parseImportData","rules","absoluteUrls","responseImportData","rule","replace","absoluteRules","push","responseArray","importText","resolvedCssText","errorData","data","test","ignoreRules","match","getFullUrl","oldUrl","newUrl","linkHref","getAttribute","linkRel","isLink","nodeName","toLowerCase","isStyle","textContent","sheet","cssRules","base","d","implementation","createHTMLDocument","b","a","head","appendChild","body","baseURI","querySelector","__webpack_require__","r","__webpack_exports__","balancedMatch","balanced","str","RegExp","maybeMatch","range","start","end","pre","slice","post","reg","m","begs","beg","left","right","result","ai","bi","pop","parseCss","css","preserveStatic","removeComments","error","msg","Error","re","exec","close","whitespace","comment","type","comments","c","cmnts","s","declaration","at_rule","comment_regexp","prop","val","ret","property","value","declarations","decls","keyframe","vals","values","name","at_x","at_fontface","media","at_media","vendor","frame","frames","keyframes","at_keyframes","supports","at_supports","at_document","at_custom_m","at_host","selectors","at_page","at_page_margin_box","hasVarFunc","some","decl","obj","balancedMatch$1","hasVarDecl","sel","core","stylesheet","errors","parseVars","cssData","parseHost","store","onWarning","reVarDeclSelectors","stringifyCss","tree","delim","cb","renderMethods","charset","custom-media","visit","font-face","import","namespace","page","page-margin-box","nodes","buf","n","txt","VAR_PROP_IDENTIFIER","VAR_FUNC_IDENTIFIER","transformCss","preserveVars","variables","walkCss","fn","resolvedValue","resolveValue","fixNestedCalc","splice","newVal","__recursiveFallback","valueData","fallback","replacement","unresolvedFallback","resolveFunc","isBrowser","isNativeSupport","CSS","counters","group","job","defaults","shadowDOM","onlyLegacy","silent","updateDOM","updateURLs","watch","cssKeyframes","cssMediaQueries","cssUrls","cssVarDeclRules","cssVarDecls","cssVarFunc","cssVars","variableStore","dom","user","cssVarsIsRunning","cssVarsObserver","cssVarsSrcNodeCount","debounceTimer","isShadowDOMReady","msgPrefix","handleError","message","sourceNode","handleWarning","isStylesheet","tagName","disabled","MutationObserver","disconnect","mutations","hasValidMutation","mutation","mutationNodes","isValid","addedNodes","isElm","nodeType","hasAttr","hasAttribute","isStyleWithVars","isOutNode","isSrcNode","dataGroup","orphanNode","resetCssNodes","parentNode","removeChild","isValidRemoveMutation","removedNodes","observe","documentElement","attributes","attributeFilter","childList","subtree","addMutationObserver","__benchmark","delay","clearTimeout","cssVarsDebounced","getTimeStamp","varObj","reLeadingHyphens","keys","reduce","fixVarNames","outNode","srcNodes","targetElm","style","setProperty","shadowRoot","nodeArray","responseUrl","responseURL","getFullUrl$1","statusText","cssUrl","fixRelativeCssUrls","currentVars","cssTree","__cssVars","outCssArray","outNodeArray","hasKeyframesWithVars","isSkip","outCss","outCssNoSpaces","removeAttribute","insertBefore","nextSibling","elms","animationNameProp","getComputedStyle","allNodes","getElementsByTagName","keyframeNodes","len","animationName","offsetHeight","_i","_len","nodeStyle","fixKeyframes","JSON","parse","stringify","addEventListener","init","evt","removeEventListener","performance","now","Date","getTime","reset"],"mappings":"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","file":"static/js/3.cea2fdd1.chunk.js","sourcesContent":["/*!\n * css-vars-ponyfill\n * v2.2.1\n * https://jhildenbiddle.github.io/css-vars-ponyfill/\n * (c) 2018-2020 John Hildenbiddle <http://hildenbiddle.com>\n * MIT license\n */\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n/*!\n * get-css-data\n * v1.7.1\n * https://github.com/jhildenbiddle/get-css-data\n * (c) 2018-2020 John Hildenbiddle <http://hildenbiddle.com>\n * MIT license\n */\n\n\nfunction getUrls(urls) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var settings = {\n    mimeType: options.mimeType || null,\n    onBeforeSend: options.onBeforeSend || Function.prototype,\n    onSuccess: options.onSuccess || Function.prototype,\n    onError: options.onError || Function.prototype,\n    onComplete: options.onComplete || Function.prototype\n  };\n  var urlArray = Array.isArray(urls) ? urls : [urls];\n  var urlQueue = Array.apply(null, Array(urlArray.length)).map(function (x) {\n    return null;\n  });\n\n  function isValidCss() {\n    var cssText = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    var isHTML = cssText.trim().charAt(0) === \"<\";\n    return !isHTML;\n  }\n\n  function onError(xhr, urlIndex) {\n    settings.onError(xhr, urlArray[urlIndex], urlIndex);\n  }\n\n  function onSuccess(responseText, urlIndex) {\n    var returnVal = settings.onSuccess(responseText, urlArray[urlIndex], urlIndex);\n    responseText = returnVal === false ? \"\" : returnVal || responseText;\n    urlQueue[urlIndex] = responseText;\n\n    if (urlQueue.indexOf(null) === -1) {\n      settings.onComplete(urlQueue);\n    }\n  }\n\n  var parser = document.createElement(\"a\");\n  urlArray.forEach(function (url, i) {\n    parser.setAttribute(\"href\", url);\n    parser.href = String(parser.href);\n    var isIElte9 = Boolean(document.all && !window.atob);\n    var isIElte9CORS = isIElte9 && parser.host.split(\":\")[0] !== location.host.split(\":\")[0];\n\n    if (isIElte9CORS) {\n      var isSameProtocol = parser.protocol === location.protocol;\n\n      if (isSameProtocol) {\n        var xdr = new XDomainRequest();\n        xdr.open(\"GET\", url);\n        xdr.timeout = 0;\n        xdr.onprogress = Function.prototype;\n        xdr.ontimeout = Function.prototype;\n\n        xdr.onload = function () {\n          if (isValidCss(xdr.responseText)) {\n            onSuccess(xdr.responseText, i);\n          } else {\n            onError(xdr, i);\n          }\n        };\n\n        xdr.onerror = function (err) {\n          onError(xdr, i);\n        };\n\n        setTimeout(function () {\n          xdr.send();\n        }, 0);\n      } else {\n        console.warn(\"Internet Explorer 9 Cross-Origin (CORS) requests must use the same protocol (\".concat(url, \")\"));\n        onError(null, i);\n      }\n    } else {\n      var xhr = new XMLHttpRequest();\n      xhr.open(\"GET\", url);\n\n      if (settings.mimeType && xhr.overrideMimeType) {\n        xhr.overrideMimeType(settings.mimeType);\n      }\n\n      settings.onBeforeSend(xhr, url, i);\n\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 4) {\n          if (xhr.status === 200 && isValidCss(xhr.responseText)) {\n            onSuccess(xhr.responseText, i);\n          } else {\n            onError(xhr, i);\n          }\n        }\n      };\n\n      xhr.send();\n    }\n  });\n}\n/**\n * Gets CSS data from <style> and <link> nodes (including @imports), then\n * returns data in order processed by DOM. Allows specifying nodes to\n * include/exclude and filtering CSS data using RegEx.\n *\n * @preserve\n * @param {object}   [options] The options object\n * @param {object}   [options.rootElement=document] Root element to traverse for\n *                   <link> and <style> nodes.\n * @param {string}   [options.include] CSS selector matching <link> and <style>\n *                   nodes to include\n * @param {string}   [options.exclude] CSS selector matching <link> and <style>\n *                   nodes to exclude\n * @param {object}   [options.filter] Regular expression used to filter node CSS\n *                   data. Each block of CSS data is tested against the filter,\n *                   and only matching data is included.\n * @param {object}   [options.useCSSOM=false] Determines if CSS data will be\n *                   collected from a stylesheet's runtime values instead of its\n *                   text content. This is required to get accurate CSS data\n *                   when a stylesheet has been modified using the deleteRule()\n *                   or insertRule() methods because these modifications will\n *                   not be reflected in the stylesheet's text content.\n * @param {function} [options.onBeforeSend] Callback before XHR is sent. Passes\n *                   1) the XHR object, 2) source node reference, and 3) the\n *                   source URL as arguments.\n * @param {function} [options.onSuccess] Callback on each CSS node read. Passes\n *                   1) CSS text, 2) source node reference, and 3) the source\n *                   URL as arguments.\n * @param {function} [options.onError] Callback on each error. Passes 1) the XHR\n *                   object for inspection, 2) soure node reference, and 3) the\n *                   source URL that failed (either a <link> href or an @import)\n *                   as arguments\n * @param {function} [options.onComplete] Callback after all nodes have been\n *                   processed. Passes 1) concatenated CSS text, 2) an array of\n *                   CSS text in DOM order, and 3) an array of nodes in DOM\n *                   order as arguments.\n *\n * @example\n *\n *   getCssData({\n *     rootElement: document,\n *     include    : 'style,link[rel=\"stylesheet\"]',\n *     exclude    : '[href=\"skip.css\"]',\n *     filter     : /red/,\n *     useCSSOM   : false,\n *     onBeforeSend(xhr, node, url) {\n *       // ...\n *     }\n *     onSuccess(cssText, node, url) {\n *       // ...\n *     }\n *     onError(xhr, node, url) {\n *       // ...\n *     },\n *     onComplete(cssText, cssArray, nodeArray) {\n *       // ...\n *     }\n *   });\n */\n\n\nfunction getCssData(options) {\n  var regex = {\n    cssComments: /\\/\\*[\\s\\S]+?\\*\\//g,\n    cssImports: /(?:@import\\s*)(?:url\\(\\s*)?(?:['\"])([^'\"]*)(?:['\"])(?:\\s*\\))?(?:[^;]*;)/g\n  };\n  var settings = {\n    rootElement: options.rootElement || document,\n    include: options.include || 'style,link[rel=\"stylesheet\"]',\n    exclude: options.exclude || null,\n    filter: options.filter || null,\n    useCSSOM: options.useCSSOM || false,\n    onBeforeSend: options.onBeforeSend || Function.prototype,\n    onSuccess: options.onSuccess || Function.prototype,\n    onError: options.onError || Function.prototype,\n    onComplete: options.onComplete || Function.prototype\n  };\n  var sourceNodes = Array.apply(null, settings.rootElement.querySelectorAll(settings.include)).filter(function (node) {\n    return !matchesSelector(node, settings.exclude);\n  });\n  var cssArray = Array.apply(null, Array(sourceNodes.length)).map(function (x) {\n    return null;\n  });\n\n  function handleComplete() {\n    var isComplete = cssArray.indexOf(null) === -1;\n\n    if (isComplete) {\n      var cssText = cssArray.join(\"\");\n      settings.onComplete(cssText, cssArray, sourceNodes);\n    }\n  }\n\n  function handleSuccess(cssText, cssIndex, node, sourceUrl) {\n    var returnVal = settings.onSuccess(cssText, node, sourceUrl);\n    cssText = returnVal !== undefined && Boolean(returnVal) === false ? \"\" : returnVal || cssText;\n    resolveImports(cssText, node, sourceUrl, function (resolvedCssText, errorData) {\n      if (cssArray[cssIndex] === null) {\n        errorData.forEach(function (data) {\n          return settings.onError(data.xhr, node, data.url);\n        });\n\n        if (!settings.filter || settings.filter.test(resolvedCssText)) {\n          cssArray[cssIndex] = resolvedCssText;\n        } else {\n          cssArray[cssIndex] = \"\";\n        }\n\n        handleComplete();\n      }\n    });\n  }\n\n  function parseImportData(cssText, baseUrl) {\n    var ignoreRules = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    var importData = {};\n    importData.rules = (cssText.replace(regex.cssComments, \"\").match(regex.cssImports) || []).filter(function (rule) {\n      return ignoreRules.indexOf(rule) === -1;\n    });\n    importData.urls = importData.rules.map(function (rule) {\n      return rule.replace(regex.cssImports, \"$1\");\n    });\n    importData.absoluteUrls = importData.urls.map(function (url) {\n      return getFullUrl(url, baseUrl);\n    });\n    importData.absoluteRules = importData.rules.map(function (rule, i) {\n      var oldUrl = importData.urls[i];\n      var newUrl = getFullUrl(importData.absoluteUrls[i], baseUrl);\n      return rule.replace(oldUrl, newUrl);\n    });\n    return importData;\n  }\n\n  function resolveImports(cssText, node, baseUrl, callbackFn) {\n    var __errorData = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n\n    var __errorRules = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : [];\n\n    var importData = parseImportData(cssText, baseUrl, __errorRules);\n\n    if (importData.rules.length) {\n      getUrls(importData.absoluteUrls, {\n        onBeforeSend: function onBeforeSend(xhr, url, urlIndex) {\n          settings.onBeforeSend(xhr, node, url);\n        },\n        onSuccess: function onSuccess(cssText, url, urlIndex) {\n          var returnVal = settings.onSuccess(cssText, node, url);\n          cssText = returnVal === false ? \"\" : returnVal || cssText;\n          var responseImportData = parseImportData(cssText, url, __errorRules);\n          responseImportData.rules.forEach(function (rule, i) {\n            cssText = cssText.replace(rule, responseImportData.absoluteRules[i]);\n          });\n          return cssText;\n        },\n        onError: function onError(xhr, url, urlIndex) {\n          __errorData.push({\n            xhr: xhr,\n            url: url\n          });\n\n          __errorRules.push(importData.rules[urlIndex]);\n\n          resolveImports(cssText, node, baseUrl, callbackFn, __errorData, __errorRules);\n        },\n        onComplete: function onComplete(responseArray) {\n          responseArray.forEach(function (importText, i) {\n            cssText = cssText.replace(importData.rules[i], importText);\n          });\n          resolveImports(cssText, node, baseUrl, callbackFn, __errorData, __errorRules);\n        }\n      });\n    } else {\n      callbackFn(cssText, __errorData);\n    }\n  }\n\n  if (sourceNodes.length) {\n    sourceNodes.forEach(function (node, i) {\n      var linkHref = node.getAttribute(\"href\");\n      var linkRel = node.getAttribute(\"rel\");\n      var isLink = node.nodeName === \"LINK\" && linkHref && linkRel && linkRel.toLowerCase() === \"stylesheet\";\n      var isStyle = node.nodeName === \"STYLE\";\n\n      if (isLink) {\n        getUrls(linkHref, {\n          mimeType: \"text/css\",\n          onBeforeSend: function onBeforeSend(xhr, url, urlIndex) {\n            settings.onBeforeSend(xhr, node, url);\n          },\n          onSuccess: function onSuccess(cssText, url, urlIndex) {\n            var sourceUrl = getFullUrl(linkHref);\n            handleSuccess(cssText, i, node, sourceUrl);\n          },\n          onError: function onError(xhr, url, urlIndex) {\n            cssArray[i] = \"\";\n            settings.onError(xhr, node, url);\n            handleComplete();\n          }\n        });\n      } else if (isStyle) {\n        var cssText = node.textContent;\n\n        if (settings.useCSSOM) {\n          cssText = Array.apply(null, node.sheet.cssRules).map(function (rule) {\n            return rule.cssText;\n          }).join(\"\");\n        }\n\n        handleSuccess(cssText, i, node, location.href);\n      } else {\n        cssArray[i] = \"\";\n        handleComplete();\n      }\n    });\n  } else {\n    settings.onComplete(\"\", []);\n  }\n}\n\nfunction getFullUrl(url, base) {\n  var d = document.implementation.createHTMLDocument(\"\");\n  var b = d.createElement(\"base\");\n  var a = d.createElement(\"a\");\n  d.head.appendChild(b);\n  d.body.appendChild(a);\n  b.href = base || document.baseURI || (document.querySelector(\"base\") || {}).href || location.href;\n  a.href = url;\n  return a.href;\n}\n\nfunction matchesSelector(elm, selector) {\n  var matches = elm.matches || elm.matchesSelector || elm.webkitMatchesSelector || elm.mozMatchesSelector || elm.msMatchesSelector || elm.oMatchesSelector;\n  return matches.call(elm, selector);\n}\n\nvar balancedMatch = balanced;\n\nfunction balanced(a, b, str) {\n  if (a instanceof RegExp) a = maybeMatch(a, str);\n  if (b instanceof RegExp) b = maybeMatch(b, str);\n  var r = range(a, b, str);\n  return r && {\n    start: r[0],\n    end: r[1],\n    pre: str.slice(0, r[0]),\n    body: str.slice(r[0] + a.length, r[1]),\n    post: str.slice(r[1] + b.length)\n  };\n}\n\nfunction maybeMatch(reg, str) {\n  var m = str.match(reg);\n  return m ? m[0] : null;\n}\n\nbalanced.range = range;\n\nfunction range(a, b, str) {\n  var begs, beg, left, right, result;\n  var ai = str.indexOf(a);\n  var bi = str.indexOf(b, ai + 1);\n  var i = ai;\n\n  if (ai >= 0 && bi > 0) {\n    begs = [];\n    left = str.length;\n\n    while (i >= 0 && !result) {\n      if (i == ai) {\n        begs.push(i);\n        ai = str.indexOf(a, i + 1);\n      } else if (begs.length == 1) {\n        result = [begs.pop(), bi];\n      } else {\n        beg = begs.pop();\n\n        if (beg < left) {\n          left = beg;\n          right = bi;\n        }\n\n        bi = str.indexOf(b, i + 1);\n      }\n\n      i = ai < bi && ai >= 0 ? ai : bi;\n    }\n\n    if (begs.length) {\n      result = [left, right];\n    }\n  }\n\n  return result;\n}\n\nfunction parseCss(css) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var defaults = {\n    preserveStatic: true,\n    removeComments: false\n  };\n\n  var settings = _extends({}, defaults, options);\n\n  var errors = [];\n\n  function error(msg) {\n    throw new Error(\"CSS parse error: \".concat(msg));\n  }\n\n  function match(re) {\n    var m = re.exec(css);\n\n    if (m) {\n      css = css.slice(m[0].length);\n      return m;\n    }\n  }\n\n  function open() {\n    return match(/^{\\s*/);\n  }\n\n  function close() {\n    return match(/^}/);\n  }\n\n  function whitespace() {\n    match(/^\\s*/);\n  }\n\n  function comment() {\n    whitespace();\n\n    if (css[0] !== \"/\" || css[1] !== \"*\") {\n      return;\n    }\n\n    var i = 2;\n\n    while (css[i] && (css[i] !== \"*\" || css[i + 1] !== \"/\")) {\n      i++;\n    }\n\n    if (!css[i]) {\n      return error(\"end of comment is missing\");\n    }\n\n    var str = css.slice(2, i);\n    css = css.slice(i + 2);\n    return {\n      type: \"comment\",\n      comment: str\n    };\n  }\n\n  function comments() {\n    var cmnts = [];\n    var c;\n\n    while (c = comment()) {\n      cmnts.push(c);\n    }\n\n    return settings.removeComments ? [] : cmnts;\n  }\n\n  function selector() {\n    whitespace();\n\n    while (css[0] === \"}\") {\n      error(\"extra closing bracket\");\n    }\n\n    var m = match(/^((\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'|[^{])+)/);\n\n    if (m) {\n      return m[0].trim().replace(/\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*\\/+/g, \"\").replace(/\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'/g, function (m) {\n        return m.replace(/,/g, \"‌\");\n      }).split(/\\s*(?![^(]*\\)),\\s*/).map(function (s) {\n        return s.replace(/\\u200C/g, \",\");\n      });\n    }\n  }\n\n  function declaration() {\n    if (css[0] === \"@\") {\n      return at_rule();\n    }\n\n    match(/^([;\\s]*)+/);\n    var comment_regexp = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n    var prop = match(/^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/);\n\n    if (!prop) {\n      return;\n    }\n\n    prop = prop[0].trim();\n\n    if (!match(/^:\\s*/)) {\n      return error(\"property missing ':'\");\n    }\n\n    var val = match(/^((?:\\/\\*.*?\\*\\/|'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\((\\s*'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|[^)]*?)\\s*\\)|[^};])+)/);\n    var ret = {\n      type: \"declaration\",\n      property: prop.replace(comment_regexp, \"\"),\n      value: val ? val[0].replace(comment_regexp, \"\").trim() : \"\"\n    };\n    match(/^[;\\s]*/);\n    return ret;\n  }\n\n  function declarations() {\n    if (!open()) {\n      return error(\"missing '{'\");\n    }\n\n    var d;\n    var decls = comments();\n\n    while (d = declaration()) {\n      decls.push(d);\n      decls = decls.concat(comments());\n    }\n\n    if (!close()) {\n      return error(\"missing '}'\");\n    }\n\n    return decls;\n  }\n\n  function keyframe() {\n    whitespace();\n    var vals = [];\n    var m;\n\n    while (m = match(/^((\\d+\\.\\d+|\\.\\d+|\\d+)%?|[a-z]+)\\s*/)) {\n      vals.push(m[1]);\n      match(/^,\\s*/);\n    }\n\n    if (vals.length) {\n      return {\n        type: \"keyframe\",\n        values: vals,\n        declarations: declarations()\n      };\n    }\n  }\n\n  function at_keyframes() {\n    var m = match(/^@([-\\w]+)?keyframes\\s*/);\n\n    if (!m) {\n      return;\n    }\n\n    var vendor = m[1];\n    m = match(/^([-\\w]+)\\s*/);\n\n    if (!m) {\n      return error(\"@keyframes missing name\");\n    }\n\n    var name = m[1];\n\n    if (!open()) {\n      return error(\"@keyframes missing '{'\");\n    }\n\n    var frame;\n    var frames = comments();\n\n    while (frame = keyframe()) {\n      frames.push(frame);\n      frames = frames.concat(comments());\n    }\n\n    if (!close()) {\n      return error(\"@keyframes missing '}'\");\n    }\n\n    return {\n      type: \"keyframes\",\n      name: name,\n      vendor: vendor,\n      keyframes: frames\n    };\n  }\n\n  function at_page() {\n    var m = match(/^@page */);\n\n    if (m) {\n      var sel = selector() || [];\n      return {\n        type: \"page\",\n        selectors: sel,\n        declarations: declarations()\n      };\n    }\n  }\n\n  function at_page_margin_box() {\n    var m = match(/@(top|bottom|left|right)-(left|center|right|top|middle|bottom)-?(corner)?\\s*/);\n\n    if (m) {\n      var name = \"\".concat(m[1], \"-\").concat(m[2]) + (m[3] ? \"-\".concat(m[3]) : \"\");\n      return {\n        type: \"page-margin-box\",\n        name: name,\n        declarations: declarations()\n      };\n    }\n  }\n\n  function at_fontface() {\n    var m = match(/^@font-face\\s*/);\n\n    if (m) {\n      return {\n        type: \"font-face\",\n        declarations: declarations()\n      };\n    }\n  }\n\n  function at_supports() {\n    var m = match(/^@supports *([^{]+)/);\n\n    if (m) {\n      return {\n        type: \"supports\",\n        supports: m[1].trim(),\n        rules: rules()\n      };\n    }\n  }\n\n  function at_host() {\n    var m = match(/^@host\\s*/);\n\n    if (m) {\n      return {\n        type: \"host\",\n        rules: rules()\n      };\n    }\n  }\n\n  function at_media() {\n    var m = match(/^@media([^{]+)*/);\n\n    if (m) {\n      return {\n        type: \"media\",\n        media: (m[1] || \"\").trim(),\n        rules: rules()\n      };\n    }\n  }\n\n  function at_custom_m() {\n    var m = match(/^@custom-media\\s+(--[^\\s]+)\\s*([^{;]+);/);\n\n    if (m) {\n      return {\n        type: \"custom-media\",\n        name: m[1].trim(),\n        media: m[2].trim()\n      };\n    }\n  }\n\n  function at_document() {\n    var m = match(/^@([-\\w]+)?document *([^{]+)/);\n\n    if (m) {\n      return {\n        type: \"document\",\n        document: m[2].trim(),\n        vendor: m[1] ? m[1].trim() : null,\n        rules: rules()\n      };\n    }\n  }\n\n  function at_x() {\n    var m = match(/^@(import|charset|namespace)\\s*([^;]+);/);\n\n    if (m) {\n      return {\n        type: m[1],\n        name: m[2].trim()\n      };\n    }\n  }\n\n  function at_rule() {\n    whitespace();\n\n    if (css[0] === \"@\") {\n      var ret = at_x() || at_fontface() || at_media() || at_keyframes() || at_supports() || at_document() || at_custom_m() || at_host() || at_page() || at_page_margin_box();\n\n      if (ret && !settings.preserveStatic) {\n        var hasVarFunc = false;\n\n        if (ret.declarations) {\n          hasVarFunc = ret.declarations.some(function (decl) {\n            return /var\\(/.test(decl.value);\n          });\n        } else {\n          var arr = ret.keyframes || ret.rules || [];\n          hasVarFunc = arr.some(function (obj) {\n            return (obj.declarations || []).some(function (decl) {\n              return /var\\(/.test(decl.value);\n            });\n          });\n        }\n\n        return hasVarFunc ? ret : {};\n      }\n\n      return ret;\n    }\n  }\n\n  function rule() {\n    if (!settings.preserveStatic) {\n      var balancedMatch$1 = balancedMatch(\"{\", \"}\", css);\n\n      if (balancedMatch$1) {\n        var hasVarDecl = /:(?:root|host)(?![.:#(])/.test(balancedMatch$1.pre) && /--\\S*\\s*:/.test(balancedMatch$1.body);\n        var hasVarFunc = /var\\(/.test(balancedMatch$1.body);\n\n        if (!hasVarDecl && !hasVarFunc) {\n          css = css.slice(balancedMatch$1.end + 1);\n          return {};\n        }\n      }\n    }\n\n    var sel = selector() || [];\n    var decls = settings.preserveStatic ? declarations() : declarations().filter(function (decl) {\n      var hasVarDecl = sel.some(function (s) {\n        return /:(?:root|host)(?![.:#(])/.test(s);\n      }) && /^--\\S/.test(decl.property);\n      var hasVarFunc = /var\\(/.test(decl.value);\n      return hasVarDecl || hasVarFunc;\n    });\n\n    if (!sel.length) {\n      error(\"selector missing\");\n    }\n\n    return {\n      type: \"rule\",\n      selectors: sel,\n      declarations: decls\n    };\n  }\n\n  function rules(core) {\n    if (!core && !open()) {\n      return error(\"missing '{'\");\n    }\n\n    var node;\n    var rules = comments();\n\n    while (css.length && (core || css[0] !== \"}\") && (node = at_rule() || rule())) {\n      if (node.type) {\n        rules.push(node);\n      }\n\n      rules = rules.concat(comments());\n    }\n\n    if (!core && !close()) {\n      return error(\"missing '}'\");\n    }\n\n    return rules;\n  }\n\n  return {\n    type: \"stylesheet\",\n    stylesheet: {\n      rules: rules(true),\n      errors: errors\n    }\n  };\n}\n\nfunction parseVars(cssData) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var defaults = {\n    parseHost: false,\n    store: {},\n    onWarning: function onWarning() {}\n  };\n\n  var settings = _extends({}, defaults, options);\n\n  var reVarDeclSelectors = new RegExp(\":\".concat(settings.parseHost ? \"host\" : \"root\", \"$\"));\n\n  if (typeof cssData === \"string\") {\n    cssData = parseCss(cssData, settings);\n  }\n\n  cssData.stylesheet.rules.forEach(function (rule) {\n    if (rule.type !== \"rule\" || !rule.selectors.some(function (s) {\n      return reVarDeclSelectors.test(s);\n    })) {\n      return;\n    }\n\n    rule.declarations.forEach(function (decl, i) {\n      var prop = decl.property;\n      var value = decl.value;\n\n      if (prop && prop.indexOf(\"--\") === 0) {\n        settings.store[prop] = value;\n      }\n    });\n  });\n  return settings.store;\n}\n\nfunction stringifyCss(tree) {\n  var delim = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n  var cb = arguments.length > 2 ? arguments[2] : undefined;\n  var renderMethods = {\n    charset: function charset(node) {\n      return \"@charset \" + node.name + \";\";\n    },\n    comment: function comment(node) {\n      return node.comment.indexOf(\"__CSSVARSPONYFILL\") === 0 ? \"/*\" + node.comment + \"*/\" : \"\";\n    },\n    \"custom-media\": function customMedia(node) {\n      return \"@custom-media \" + node.name + \" \" + node.media + \";\";\n    },\n    declaration: function declaration(node) {\n      return node.property + \":\" + node.value + \";\";\n    },\n    document: function document(node) {\n      return \"@\" + (node.vendor || \"\") + \"document \" + node.document + \"{\" + visit(node.rules) + \"}\";\n    },\n    \"font-face\": function fontFace(node) {\n      return \"@font-face\" + \"{\" + visit(node.declarations) + \"}\";\n    },\n    host: function host(node) {\n      return \"@host\" + \"{\" + visit(node.rules) + \"}\";\n    },\n    import: function _import(node) {\n      return \"@import \" + node.name + \";\";\n    },\n    keyframe: function keyframe(node) {\n      return node.values.join(\",\") + \"{\" + visit(node.declarations) + \"}\";\n    },\n    keyframes: function keyframes(node) {\n      return \"@\" + (node.vendor || \"\") + \"keyframes \" + node.name + \"{\" + visit(node.keyframes) + \"}\";\n    },\n    media: function media(node) {\n      return \"@media \" + node.media + \"{\" + visit(node.rules) + \"}\";\n    },\n    namespace: function namespace(node) {\n      return \"@namespace \" + node.name + \";\";\n    },\n    page: function page(node) {\n      return \"@page \" + (node.selectors.length ? node.selectors.join(\", \") : \"\") + \"{\" + visit(node.declarations) + \"}\";\n    },\n    \"page-margin-box\": function pageMarginBox(node) {\n      return \"@\" + node.name + \"{\" + visit(node.declarations) + \"}\";\n    },\n    rule: function rule(node) {\n      var decls = node.declarations;\n\n      if (decls.length) {\n        return node.selectors.join(\",\") + \"{\" + visit(decls) + \"}\";\n      }\n    },\n    supports: function supports(node) {\n      return \"@supports \" + node.supports + \"{\" + visit(node.rules) + \"}\";\n    }\n  };\n\n  function visit(nodes) {\n    var buf = \"\";\n\n    for (var i = 0; i < nodes.length; i++) {\n      var n = nodes[i];\n\n      if (cb) {\n        cb(n);\n      }\n\n      var txt = renderMethods[n.type](n);\n\n      if (txt) {\n        buf += txt;\n\n        if (txt.length && n.selectors) {\n          buf += delim;\n        }\n      }\n    }\n\n    return buf;\n  }\n\n  return visit(tree.stylesheet.rules);\n}\n\nfunction walkCss(node, fn) {\n  node.rules.forEach(function (rule) {\n    if (rule.rules) {\n      walkCss(rule, fn);\n      return;\n    }\n\n    if (rule.keyframes) {\n      rule.keyframes.forEach(function (keyframe) {\n        if (keyframe.type === \"keyframe\") {\n          fn(keyframe.declarations, rule);\n        }\n      });\n      return;\n    }\n\n    if (!rule.declarations) {\n      return;\n    }\n\n    fn(rule.declarations, node);\n  });\n}\n\nvar VAR_PROP_IDENTIFIER = \"--\";\nvar VAR_FUNC_IDENTIFIER = \"var\";\n\nfunction transformCss(cssData) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var defaults = {\n    preserveStatic: true,\n    preserveVars: false,\n    variables: {},\n    onWarning: function onWarning() {}\n  };\n\n  var settings = _extends({}, defaults, options);\n\n  if (typeof cssData === \"string\") {\n    cssData = parseCss(cssData, settings);\n  }\n\n  walkCss(cssData.stylesheet, function (declarations, node) {\n    for (var i = 0; i < declarations.length; i++) {\n      var decl = declarations[i];\n      var type = decl.type;\n      var prop = decl.property;\n      var value = decl.value;\n\n      if (type !== \"declaration\") {\n        continue;\n      }\n\n      if (!settings.preserveVars && prop && prop.indexOf(VAR_PROP_IDENTIFIER) === 0) {\n        declarations.splice(i, 1);\n        i--;\n        continue;\n      }\n\n      if (value.indexOf(VAR_FUNC_IDENTIFIER + \"(\") !== -1) {\n        var resolvedValue = resolveValue(value, settings);\n\n        if (resolvedValue !== decl.value) {\n          resolvedValue = fixNestedCalc(resolvedValue);\n\n          if (!settings.preserveVars) {\n            decl.value = resolvedValue;\n          } else {\n            declarations.splice(i, 0, {\n              type: type,\n              property: prop,\n              value: resolvedValue\n            });\n            i++;\n          }\n        }\n      }\n    }\n  });\n  return stringifyCss(cssData);\n}\n\nfunction fixNestedCalc(value) {\n  var reCalcVal = /calc\\(([^)]+)\\)/g;\n  (value.match(reCalcVal) || []).forEach(function (match) {\n    var newVal = \"calc\".concat(match.split(\"calc\").join(\"\"));\n    value = value.replace(match, newVal);\n  });\n  return value;\n}\n\nfunction resolveValue(value) {\n  var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var __recursiveFallback = arguments.length > 2 ? arguments[2] : undefined;\n\n  if (value.indexOf(\"var(\") === -1) {\n    return value;\n  }\n\n  var valueData = balancedMatch(\"(\", \")\", value);\n\n  function resolveFunc(value) {\n    var name = value.split(\",\")[0].replace(/[\\s\\n\\t]/g, \"\");\n    var fallback = (value.match(/(?:\\s*,\\s*){1}(.*)?/) || [])[1];\n    var match = Object.prototype.hasOwnProperty.call(settings.variables, name) ? String(settings.variables[name]) : undefined;\n    var replacement = match || (fallback ? String(fallback) : undefined);\n    var unresolvedFallback = __recursiveFallback || value;\n\n    if (!match) {\n      settings.onWarning('variable \"'.concat(name, '\" is undefined'));\n    }\n\n    if (replacement && replacement !== \"undefined\" && replacement.length > 0) {\n      return resolveValue(replacement, settings, unresolvedFallback);\n    } else {\n      return \"var(\".concat(unresolvedFallback, \")\");\n    }\n  }\n\n  if (!valueData) {\n    if (value.indexOf(\"var(\") !== -1) {\n      settings.onWarning('missing closing \")\" in the value \"'.concat(value, '\"'));\n    }\n\n    return value;\n  } else if (valueData.pre.slice(-3) === \"var\") {\n    var isEmptyVarFunc = valueData.body.trim().length === 0;\n\n    if (isEmptyVarFunc) {\n      settings.onWarning(\"var() must contain a non-whitespace string\");\n      return value;\n    } else {\n      return valueData.pre.slice(0, -3) + resolveFunc(valueData.body) + resolveValue(valueData.post, settings);\n    }\n  } else {\n    return valueData.pre + \"(\".concat(resolveValue(valueData.body, settings), \")\") + resolveValue(valueData.post, settings);\n  }\n}\n\nvar isBrowser = typeof window !== \"undefined\";\nvar isNativeSupport = isBrowser && window.CSS && window.CSS.supports && window.CSS.supports(\"(--a: 0)\");\nvar counters = {\n  group: 0,\n  job: 0\n};\nvar defaults = {\n  rootElement: isBrowser ? document : null,\n  shadowDOM: false,\n  include: \"style,link[rel=stylesheet]\",\n  exclude: \"\",\n  variables: {},\n  onlyLegacy: true,\n  preserveStatic: true,\n  preserveVars: false,\n  silent: false,\n  updateDOM: true,\n  updateURLs: true,\n  watch: null,\n  onBeforeSend: function onBeforeSend() {},\n  onWarning: function onWarning() {},\n  onError: function onError() {},\n  onSuccess: function onSuccess() {},\n  onComplete: function onComplete() {}\n};\nvar regex = {\n  cssComments: /\\/\\*[\\s\\S]+?\\*\\//g,\n  cssKeyframes: /@(?:-\\w*-)?keyframes/,\n  cssMediaQueries: /@media[^{]+\\{([\\s\\S]+?})\\s*}/g,\n  cssUrls: /url\\((?!['\"]?(?:data|http|\\/\\/):)['\"]?([^'\")]*)['\"]?\\)/g,\n  cssVarDeclRules: /(?::(?:root|host)(?![.:#(])[\\s,]*[^{]*{\\s*[^}]*})/g,\n  cssVarDecls: /(?:[\\s;]*)(-{2}\\w[\\w-]*)(?:\\s*:\\s*)([^;]*);/g,\n  cssVarFunc: /var\\(\\s*--[\\w-]/,\n  cssVars: /(?:(?::(?:root|host)(?![.:#(])[\\s,]*[^{]*{\\s*[^;]*;*\\s*)|(?:var\\(\\s*))(--[^:)]+)(?:\\s*[:)])/\n};\nvar variableStore = {\n  dom: {},\n  job: {},\n  user: {}\n};\nvar cssVarsIsRunning = false;\nvar cssVarsObserver = null;\nvar cssVarsSrcNodeCount = 0;\nvar debounceTimer = null;\nvar isShadowDOMReady = false;\n/**\n * Fetches, parses, and transforms CSS custom properties from specified\n * <style> and <link> elements into static values, then appends a new <style>\n * element with static values to the DOM to provide CSS custom property\n * compatibility for legacy browsers. Also provides a single interface for\n * live updates of runtime values in both modern and legacy browsers.\n *\n * @preserve\n * @param {object}   [options] Options object\n * @param {object}   [options.rootElement=document] Root element to traverse for\n *                   <link> and <style> nodes\n * @param {boolean}  [options.shadowDOM=false] Determines if shadow DOM <link>\n *                   and <style> nodes will be processed.\n * @param {string}   [options.include=\"style,link[rel=stylesheet]\"] CSS selector\n *                   matching <link re=\"stylesheet\"> and <style> nodes to\n *                   process\n * @param {string}   [options.exclude] CSS selector matching <link\n *                   rel=\"stylehseet\"> and <style> nodes to exclude from those\n *                   matches by options.include\n * @param {object}   [options.variables] A map of custom property name/value\n *                   pairs. Property names can omit or include the leading\n *                   double-hyphen (—), and values specified will override\n *                   previous values\n * @param {boolean}  [options.onlyLegacy=true] Determines if the ponyfill will\n *                   only generate legacy-compatible CSS in browsers that lack\n *                   native support (i.e., legacy browsers)\n * @param {boolean}  [options.preserveStatic=true] Determines if CSS\n *                   declarations that do not reference a custom property will\n *                   be preserved in the transformed CSS\n * @param {boolean}  [options.preserveVars=false] Determines if CSS custom\n *                   property declarations will be preserved in the transformed\n *                   CSS\n * @param {boolean}  [options.silent=false] Determines if warning and error\n *                   messages will be displayed on the console\n * @param {boolean}  [options.updateDOM=true] Determines if the ponyfill will\n *                   update the DOM after processing CSS custom properties\n * @param {boolean}  [options.updateURLs=true] Determines if the ponyfill will\n *                   convert relative url() paths to absolute urls\n * @param {boolean}  [options.watch=false] Determines if a MutationObserver will\n *                   be created that will execute the ponyfill when a <link> or\n *                   <style> DOM mutation is observed\n * @param {function} [options.onBeforeSend] Callback before XHR is sent. Passes\n *                   1) the XHR object, 2) source node reference, and 3) the\n *                   source URL as arguments\n * @param {function} [options.onWarning] Callback after each CSS parsing warning\n *                   has occurred. Passes 1) a warning message as an argument.\n * @param {function} [options.onError] Callback after a CSS parsing error has\n *                   occurred or an XHR request has failed. Passes 1) an error\n *                   message, and 2) source node reference, 3) xhr, and 4 url as\n *                   arguments.\n * @param {function} [options.onSuccess] Callback after CSS data has been\n *                   collected from each node and before CSS custom properties\n *                   have been transformed. Allows modifying the CSS data before\n *                   it is transformed by returning any string value (or false\n *                   to skip). Passes 1) CSS text, 2) source node reference, and\n *                   3) the source URL as arguments.\n * @param {function} [options.onComplete] Callback after all CSS has been\n *                   processed, legacy-compatible CSS has been generated, and\n *                   (optionally) the DOM has been updated. Passes 1) a CSS\n *                   string with CSS variable values resolved, 2) an array of\n *                   output <style> node references that have been appended to\n *                   the DOM, 3) an object containing all custom properies names\n *                   and values, and 4) the ponyfill execution time in\n *                   milliseconds.\n *\n * @example\n *\n *   cssVars({\n *     rootElement   : document,\n *     shadowDOM     : false,\n *     include       : 'style,link[rel=\"stylesheet\"]',\n *     exclude       : '',\n *     variables     : {},\n *     onlyLegacy    : true,\n *     preserveStatic: true,\n *     preserveVars  : false,\n *     silent        : false,\n *     updateDOM     : true,\n *     updateURLs    : true,\n *     watch         : false,\n *     onBeforeSend(xhr, node, url) {},\n *     onWarning(message) {},\n *     onError(message, node, xhr, url) {},\n *     onSuccess(cssText, node, url) {},\n *     onComplete(cssText, styleNode, cssVariables, benchmark) {}\n *   });\n */\n\nfunction cssVars() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var msgPrefix = \"cssVars(): \";\n\n  var settings = _extends({}, defaults, options);\n\n  function handleError(message, sourceNode, xhr, url) {\n    if (!settings.silent && window.console) {\n      console.error(\"\".concat(msgPrefix).concat(message, \"\\n\"), sourceNode);\n    }\n\n    settings.onError(message, sourceNode, xhr, url);\n  }\n\n  function handleWarning(message) {\n    if (!settings.silent && window.console) {\n      console.warn(\"\".concat(msgPrefix).concat(message));\n    }\n\n    settings.onWarning(message);\n  }\n\n  if (!isBrowser) {\n    return;\n  }\n\n  if (settings.watch) {\n    settings.watch = defaults.watch;\n    addMutationObserver(settings);\n    cssVars(settings);\n    return;\n  } else if (settings.watch === false && cssVarsObserver) {\n    cssVarsObserver.disconnect();\n    cssVarsObserver = null;\n  }\n\n  if (!settings.__benchmark) {\n    if (cssVarsIsRunning === settings.rootElement) {\n      cssVarsDebounced(options);\n      return;\n    }\n\n    settings.__benchmark = getTimeStamp();\n    settings.exclude = [cssVarsObserver ? '[data-cssvars]:not([data-cssvars=\"\"])' : '[data-cssvars=\"out\"]', settings.exclude].filter(function (selector) {\n      return selector;\n    }).join(\",\");\n    settings.variables = fixVarNames(settings.variables);\n\n    if (!cssVarsObserver) {\n      var outNodes = Array.apply(null, settings.rootElement.querySelectorAll('[data-cssvars=\"out\"]'));\n      outNodes.forEach(function (outNode) {\n        var dataGroup = outNode.getAttribute(\"data-cssvars-group\");\n        var srcNode = dataGroup ? settings.rootElement.querySelector('[data-cssvars=\"src\"][data-cssvars-group=\"'.concat(dataGroup, '\"]')) : null;\n\n        if (!srcNode) {\n          outNode.parentNode.removeChild(outNode);\n        }\n      });\n\n      if (cssVarsSrcNodeCount) {\n        var srcNodes = settings.rootElement.querySelectorAll('[data-cssvars]:not([data-cssvars=\"out\"])');\n\n        if (srcNodes.length < cssVarsSrcNodeCount) {\n          cssVarsSrcNodeCount = srcNodes.length;\n          variableStore.dom = {};\n        }\n      }\n    }\n  }\n\n  if (document.readyState !== \"loading\") {\n    if (isNativeSupport && settings.onlyLegacy) {\n      if (settings.updateDOM) {\n        var targetElm = settings.rootElement.host || (settings.rootElement === document ? document.documentElement : settings.rootElement);\n        Object.keys(settings.variables).forEach(function (key) {\n          targetElm.style.setProperty(key, settings.variables[key]);\n        });\n      }\n    } else if (!isShadowDOMReady && (settings.shadowDOM || settings.rootElement.shadowRoot || settings.rootElement.host)) {\n      getCssData({\n        rootElement: defaults.rootElement,\n        include: defaults.include,\n        exclude: settings.exclude,\n        onSuccess: function onSuccess(cssText, node, url) {\n          cssText = cssText.replace(regex.cssComments, \"\").replace(regex.cssMediaQueries, \"\");\n          cssText = (cssText.match(regex.cssVarDeclRules) || []).join(\"\");\n          return cssText || false;\n        },\n        onComplete: function onComplete(cssText, cssArray, nodeArray) {\n          parseVars(cssText, {\n            store: variableStore.dom,\n            onWarning: handleWarning\n          });\n          isShadowDOMReady = true;\n          cssVars(settings);\n        }\n      });\n    } else {\n      cssVarsIsRunning = settings.rootElement;\n      getCssData({\n        rootElement: settings.rootElement,\n        include: settings.include,\n        exclude: settings.exclude,\n        onBeforeSend: settings.onBeforeSend,\n        onError: function onError(xhr, node, url) {\n          var responseUrl = xhr.responseURL || getFullUrl$1(url, location.href);\n          var statusText = xhr.statusText ? \"(\".concat(xhr.statusText, \")\") : \"Unspecified Error\" + (xhr.status === 0 ? \" (possibly CORS related)\" : \"\");\n          var errorMsg = \"CSS XHR Error: \".concat(responseUrl, \" \").concat(xhr.status, \" \").concat(statusText);\n          handleError(errorMsg, node, xhr, responseUrl);\n        },\n        onSuccess: function onSuccess(cssText, node, url) {\n          var returnVal = settings.onSuccess(cssText, node, url);\n          cssText = returnVal !== undefined && Boolean(returnVal) === false ? \"\" : returnVal || cssText;\n\n          if (settings.updateURLs) {\n            cssText = fixRelativeCssUrls(cssText, url);\n          }\n\n          return cssText;\n        },\n        onComplete: function onComplete(cssText, cssArray) {\n          var nodeArray = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n          var currentVars = _extends({}, variableStore.dom, variableStore.user);\n\n          var hasVarChange = false;\n          variableStore.job = {};\n          nodeArray.forEach(function (node, i) {\n            if (regex.cssVars.test(cssArray[i])) {\n              try {\n                var cssTree = parseCss(cssArray[i], {\n                  preserveStatic: settings.preserveStatic,\n                  removeComments: true\n                });\n                parseVars(cssTree, {\n                  parseHost: Boolean(settings.rootElement.host),\n                  store: variableStore.dom,\n                  onWarning: handleWarning\n                });\n                node.__cssVars = {\n                  tree: cssTree\n                };\n              } catch (err) {\n                handleError(err.message, node);\n              }\n            }\n          });\n\n          _extends(variableStore.job, variableStore.dom);\n\n          if (settings.updateDOM) {\n            _extends(variableStore.user, settings.variables);\n\n            _extends(variableStore.job, variableStore.user);\n          } else {\n            _extends(variableStore.job, variableStore.user, settings.variables);\n\n            _extends(currentVars, settings.variables);\n          }\n\n          hasVarChange = counters.job > 0 && Boolean(Object.keys(variableStore.job).length > Object.keys(currentVars).length || Boolean(Object.keys(currentVars).length && Object.keys(variableStore.job).some(function (key) {\n            return variableStore.job[key] !== currentVars[key];\n          })));\n\n          if (hasVarChange) {\n            resetCssNodes(settings.rootElement);\n            cssVars(settings);\n          } else {\n            var outCssArray = [];\n            var outNodeArray = [];\n            var hasKeyframesWithVars = false;\n\n            if (settings.updateDOM) {\n              counters.job++;\n            }\n\n            nodeArray.forEach(function (node) {\n              var isSkip = !node.__cssVars;\n\n              if (node.__cssVars) {\n                try {\n                  transformCss(node.__cssVars.tree, _extends({}, settings, {\n                    variables: variableStore.job,\n                    onWarning: handleWarning\n                  }));\n                  var outCss = stringifyCss(node.__cssVars.tree);\n\n                  if (settings.updateDOM) {\n                    if (!node.getAttribute(\"data-cssvars\")) {\n                      node.setAttribute(\"data-cssvars\", \"src\");\n                    }\n\n                    if (outCss.length) {\n                      var dataGroup = node.getAttribute(\"data-cssvars-group\") || ++counters.group;\n                      var outCssNoSpaces = outCss.replace(/\\s/g, \"\");\n                      var outNode = settings.rootElement.querySelector('[data-cssvars=\"out\"][data-cssvars-group=\"'.concat(dataGroup, '\"]')) || document.createElement(\"style\");\n                      hasKeyframesWithVars = hasKeyframesWithVars || regex.cssKeyframes.test(outCss);\n\n                      if (!outNode.hasAttribute(\"data-cssvars\")) {\n                        outNode.setAttribute(\"data-cssvars\", \"out\");\n                      }\n\n                      if (outCssNoSpaces === node.textContent.replace(/\\s/g, \"\")) {\n                        isSkip = true;\n\n                        if (outNode && outNode.parentNode) {\n                          node.removeAttribute(\"data-cssvars-group\");\n                          outNode.parentNode.removeChild(outNode);\n                        }\n                      } else if (outCssNoSpaces !== outNode.textContent.replace(/\\s/g, \"\")) {\n                        [node, outNode].forEach(function (n) {\n                          n.setAttribute(\"data-cssvars-job\", counters.job);\n                          n.setAttribute(\"data-cssvars-group\", dataGroup);\n                        });\n                        outNode.textContent = outCss;\n                        outCssArray.push(outCss);\n                        outNodeArray.push(outNode);\n\n                        if (!outNode.parentNode) {\n                          node.parentNode.insertBefore(outNode, node.nextSibling);\n                        }\n                      }\n                    }\n                  } else {\n                    if (node.textContent.replace(/\\s/g, \"\") !== outCss) {\n                      outCssArray.push(outCss);\n                    }\n                  }\n                } catch (err) {\n                  handleError(err.message, node);\n                }\n              }\n\n              if (isSkip) {\n                node.setAttribute(\"data-cssvars\", \"skip\");\n              }\n\n              if (!node.hasAttribute(\"data-cssvars-job\")) {\n                node.setAttribute(\"data-cssvars-job\", counters.job);\n              }\n            });\n            cssVarsSrcNodeCount = settings.rootElement.querySelectorAll('[data-cssvars]:not([data-cssvars=\"out\"])').length;\n\n            if (settings.shadowDOM) {\n              var elms = [settings.rootElement].concat(_toConsumableArray(settings.rootElement.querySelectorAll(\"*\")));\n\n              for (var i = 0, elm; elm = elms[i]; ++i) {\n                if (elm.shadowRoot && elm.shadowRoot.querySelector(\"style\")) {\n                  var shadowSettings = _extends({}, settings, {\n                    rootElement: elm.shadowRoot\n                  });\n\n                  cssVars(shadowSettings);\n                }\n              }\n            }\n\n            if (settings.updateDOM && hasKeyframesWithVars) {\n              fixKeyframes(settings.rootElement);\n            }\n\n            cssVarsIsRunning = false;\n            settings.onComplete(outCssArray.join(\"\"), outNodeArray, JSON.parse(JSON.stringify(variableStore.job)), getTimeStamp() - settings.__benchmark);\n          }\n        }\n      });\n    }\n  } else {\n    document.addEventListener(\"DOMContentLoaded\", function init(evt) {\n      cssVars(options);\n      document.removeEventListener(\"DOMContentLoaded\", init);\n    });\n  }\n}\n\ncssVars.reset = function () {\n  counters.job = 0;\n  counters.group = 0;\n  cssVarsIsRunning = false;\n\n  if (cssVarsObserver) {\n    cssVarsObserver.disconnect();\n    cssVarsObserver = null;\n  }\n\n  cssVarsSrcNodeCount = 0;\n  debounceTimer = null;\n  isShadowDOMReady = false;\n\n  for (var prop in variableStore) {\n    variableStore[prop] = {};\n  }\n};\n\nfunction addMutationObserver(settings) {\n  function isLink(node) {\n    var isStylesheet = node.tagName === \"LINK\" && (node.getAttribute(\"rel\") || \"\").indexOf(\"stylesheet\") !== -1;\n    return isStylesheet && !node.disabled;\n  }\n\n  function isStyle(node) {\n    return node.tagName === \"STYLE\" && !node.disabled;\n  }\n\n  function isValidAddMutation(mutationNodes) {\n    return Array.apply(null, mutationNodes).some(function (node) {\n      var isElm = node.nodeType === 1;\n      var hasAttr = isElm && node.hasAttribute(\"data-cssvars\");\n      var isStyleWithVars = isStyle(node) && regex.cssVars.test(node.textContent);\n      var isValid = !hasAttr && (isLink(node) || isStyleWithVars);\n      return isValid;\n    });\n  }\n\n  function isValidRemoveMutation(mutationNodes) {\n    return Array.apply(null, mutationNodes).some(function (node) {\n      var isElm = node.nodeType === 1;\n      var isOutNode = isElm && node.getAttribute(\"data-cssvars\") === \"out\";\n      var isSrcNode = isElm && node.getAttribute(\"data-cssvars\") === \"src\";\n      var isValid = isSrcNode;\n\n      if (isSrcNode || isOutNode) {\n        var dataGroup = node.getAttribute(\"data-cssvars-group\");\n        var orphanNode = settings.rootElement.querySelector('[data-cssvars-group=\"'.concat(dataGroup, '\"]'));\n\n        if (isSrcNode) {\n          resetCssNodes(settings.rootElement);\n          variableStore.dom = {};\n        }\n\n        if (orphanNode) {\n          orphanNode.parentNode.removeChild(orphanNode);\n        }\n      }\n\n      return isValid;\n    });\n  }\n\n  if (!window.MutationObserver) {\n    return;\n  }\n\n  if (cssVarsObserver) {\n    cssVarsObserver.disconnect();\n    cssVarsObserver = null;\n  }\n\n  cssVarsObserver = new MutationObserver(function (mutations) {\n    var hasValidMutation = mutations.some(function (mutation) {\n      var isValid = false;\n\n      if (mutation.type === \"attributes\") {\n        isValid = isLink(mutation.target);\n      } else if (mutation.type === \"childList\") {\n        isValid = isValidAddMutation(mutation.addedNodes) || isValidRemoveMutation(mutation.removedNodes);\n      }\n\n      return isValid;\n    });\n\n    if (hasValidMutation) {\n      cssVars(settings);\n    }\n  });\n  cssVarsObserver.observe(document.documentElement, {\n    attributes: true,\n    attributeFilter: [\"disabled\", \"href\"],\n    childList: true,\n    subtree: true\n  });\n}\n\nfunction cssVarsDebounced(settings) {\n  var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\n  clearTimeout(debounceTimer);\n  debounceTimer = setTimeout(function () {\n    settings.__benchmark = null;\n    cssVars(settings);\n  }, delay);\n}\n\nfunction fixKeyframes(rootElement) {\n  var animationNameProp = [\"animation-name\", \"-moz-animation-name\", \"-webkit-animation-name\"].filter(function (prop) {\n    return getComputedStyle(document.body)[prop];\n  })[0];\n\n  if (animationNameProp) {\n    var allNodes = rootElement.getElementsByTagName(\"*\");\n    var keyframeNodes = [];\n    var nameMarker = \"__CSSVARSPONYFILL-KEYFRAMES__\";\n\n    for (var i = 0, len = allNodes.length; i < len; i++) {\n      var node = allNodes[i];\n      var animationName = getComputedStyle(node)[animationNameProp];\n\n      if (animationName !== \"none\") {\n        node.style[animationNameProp] += nameMarker;\n        keyframeNodes.push(node);\n      }\n    }\n\n    void document.body.offsetHeight;\n\n    for (var _i = 0, _len = keyframeNodes.length; _i < _len; _i++) {\n      var nodeStyle = keyframeNodes[_i].style;\n      nodeStyle[animationNameProp] = nodeStyle[animationNameProp].replace(nameMarker, \"\");\n    }\n  }\n}\n\nfunction fixRelativeCssUrls(cssText, baseUrl) {\n  var cssUrls = cssText.replace(regex.cssComments, \"\").match(regex.cssUrls) || [];\n  cssUrls.forEach(function (cssUrl) {\n    var oldUrl = cssUrl.replace(regex.cssUrls, \"$1\");\n    var newUrl = getFullUrl$1(oldUrl, baseUrl);\n    cssText = cssText.replace(cssUrl, cssUrl.replace(oldUrl, newUrl));\n  });\n  return cssText;\n}\n\nfunction fixVarNames() {\n  var varObj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var reLeadingHyphens = /^-{2}/;\n  return Object.keys(varObj).reduce(function (obj, value) {\n    var key = reLeadingHyphens.test(value) ? value : \"--\".concat(value.replace(/^-+/, \"\"));\n    obj[key] = varObj[value];\n    return obj;\n  }, {});\n}\n\nfunction getFullUrl$1(url) {\n  var base = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : location.href;\n  var d = document.implementation.createHTMLDocument(\"\");\n  var b = d.createElement(\"base\");\n  var a = d.createElement(\"a\");\n  d.head.appendChild(b);\n  d.body.appendChild(a);\n  b.href = base;\n  a.href = url;\n  return a.href;\n}\n\nfunction getTimeStamp() {\n  return isBrowser && (window.performance || {}).now ? window.performance.now() : new Date().getTime();\n}\n\nfunction resetCssNodes(rootElement) {\n  var resetNodes = Array.apply(null, rootElement.querySelectorAll('[data-cssvars=\"skip\"],[data-cssvars=\"src\"]'));\n  resetNodes.forEach(function (node) {\n    return node.setAttribute(\"data-cssvars\", \"\");\n  });\n}\n\nexport default cssVars;"],"sourceRoot":""}